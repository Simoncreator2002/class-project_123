#include <iostream>
#include <string>
using namespace std;

const int MAX = 100;  // Maximum stack size

class FriendStack {
private:
    string stack[MAX];
    int top;
    int maxSize;

public:
    FriendStack(int size) {
        top = -1;
        maxSize = size;
    }

    bool isFull() {
        return top == maxSize - 1;
    }

    bool isEmpty() {
        return top == -1;
    }

    void push(string name) {
        if (isFull()) {
            cout << "Stack is full. Cannot push " << name << "." << endl;
        } else {
            top++;
            stack[top] = name;
            cout << name << " added to the stack." << endl;
        }
    }

    void pop(string name) {
        if (isEmpty()) {
            cout << "Stack is empty. Cannot pop anything." << endl;
            return;
        }

        // Find the friend's name in the stack
        int index = -1;
        for (int i = 0; i <= top; i++) {
            if (stack[i] == name) {
                index = i;
                break;
            }
        }

        if (index == -1) {
            cout << name << " is not in the stack." << endl;
        } else {
            // Shift elements to remove the friend
            for (int i = index; i < top; i++) {
                stack[i] = stack[i + 1];
            }
            top--;
            cout << name << " has been removed from the stack." << endl;
        }
    }

    void peek() {
        if (isEmpty()) {
            cout << "Stack is empty." << endl;
        } else {
            cout << "Top friend is: " << stack[top] << endl;
        }
    }

    void display() {
        if (isEmpty()) {
            cout << "Stack is empty." << endl;
        } else {
            cout << "Friends in the stack: ";
            for (int i = 0; i <= top; i++) {
                cout << stack[i] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    int size;
    cout << "Enter the number of friends you want to store: ";
    cin >> size;

    FriendStack myStack(size);

    cout << "\nEnter " << size << " friend names to fill the stack:\n";
    for (int i = 0; i < size; i++) {
        string name;
        cout << "Friend " << i + 1 << ": ";
        cin >> name;
        myStack.push(name);
    }

    string command;
    while (true) {
        cout << "\nChoose an operation (push, pop, peek, display, exit): ";
        cin >> command;

        if (command == "push") {
            string name;
            cout << "Enter friend's name to push: ";
            cin >> name;
            myStack.push(name);
        } else if (command == "pop") {
            string name;
            cout << "Enter friend's name to remove (pop): ";
            cin >> name;
            myStack.pop(name);
        } else if (command == "peek") {
            myStack.peek();
        } else if (command == "display") {
            myStack.display();
        } else if (command == "exit") {
            cout << "Exiting the program." << endl;
            break;
        } else {
            cout << "Invalid operation. Try again." << endl;
        }
    }

    return 0;
}
