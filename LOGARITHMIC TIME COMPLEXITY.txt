#include <iostream>
using namespace std;

int binarySearch(int arr[], int left, int right, int key) {
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == key)
            return mid; // Key found, return index
        if (arr[mid] < key)
            left = mid + 1; // Search in the right half
        else
            right = mid - 1; // Search in the left half
    }
    return -1; // Key not found
}

// Function to print search result
void searchResult(int index, int key) {
    if (index != -1)
        cout << "Element " << key << " found at index: " << index << endl;
    else
        cout << "Element " << key << " not found in the array." << endl;
}

int main() {
    int numbers[] = {10, 20, 30, 40, 50, 60, 70}; // Sorted array (Binary Search requires sorted array)
    int size = sizeof(numbers) / sizeof(numbers[0]);

    int key1 = 30, key2 = 100; // Example search values

    cout << "Searching for " << key1 << "..." << endl;
    int result1 = binarySearch(numbers, 0, size - 1, key1);
    searchResult(result1, key1);

    cout << "Searching for " << key2 << "..." << endl;
    int result2 = binarySearch(numbers, 0, size - 1, key2);
    searchResult(result2, key2);

    return 0;
}
